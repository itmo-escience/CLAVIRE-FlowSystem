//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Easis.Wfs.FlowSystemService.StorageService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MongoEntityWithGuidContractBase", Namespace="http://schemas.datacontract.org/2004/07/Easis.Common.DbAccess.Mongo")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Easis.Wfs.FlowSystemService.StorageService.DataEntry))]
    public partial class MongoEntityWithGuidContractBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataEntry", Namespace="http://schemas.datacontract.org/2004/07/Easis.Services.Storage.DataContracts")]
    [System.SerializableAttribute()]
    public partial class DataEntry : Easis.Wfs.FlowSystemService.StorageService.MongoEntityWithGuidContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegisteredAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locator {
            get {
                return this.LocatorField;
            }
            set {
                if ((object.ReferenceEquals(this.LocatorField, value) != true)) {
                    this.LocatorField = value;
                    this.RaisePropertyChanged("Locator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedAt {
            get {
                return this.ModifiedAtField;
            }
            set {
                if ((this.ModifiedAtField.Equals(value) != true)) {
                    this.ModifiedAtField = value;
                    this.RaisePropertyChanged("ModifiedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegisteredAt {
            get {
                return this.RegisteredAtField;
            }
            set {
                if ((this.RegisteredAtField.Equals(value) != true)) {
                    this.RegisteredAtField = value;
                    this.RaisePropertyChanged("RegisteredAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StorageService.IStorageService")]
    public interface IStorageService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/RegisterData", ReplyAction="http://tempuri.org/IStorageService/RegisterDataResponse")]
        string RegisterData(Easis.Wfs.FlowSystemService.StorageService.DataEntry dataEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/RegisterDataBatch", ReplyAction="http://tempuri.org/IStorageService/RegisterDataBatchResponse")]
        string[] RegisterDataBatch(Easis.Wfs.FlowSystemService.StorageService.DataEntry[] dataEntries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/GetDataById", ReplyAction="http://tempuri.org/IStorageService/GetDataByIdResponse")]
        Easis.Wfs.FlowSystemService.StorageService.DataEntry GetDataById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/RemoveDataById", ReplyAction="http://tempuri.org/IStorageService/RemoveDataByIdResponse")]
        void RemoveDataById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/GetDataByIdBatch", ReplyAction="http://tempuri.org/IStorageService/GetDataByIdBatchResponse")]
        Easis.Wfs.FlowSystemService.StorageService.DataEntry[] GetDataByIdBatch(string[] idList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/ZipSessionGet", ReplyAction="http://tempuri.org/IStorageService/ZipSessionGetResponse")]
        System.IO.Stream ZipSessionGet(string sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/ZipGet", ReplyAction="http://tempuri.org/IStorageService/ZipGetResponse")]
        System.IO.Stream ZipGet(string[] dataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/ZipSessionStart", ReplyAction="http://tempuri.org/IStorageService/ZipSessionStartResponse")]
        string ZipSessionStart(string[] dataIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/ZipIsReady", ReplyAction="http://tempuri.org/IStorageService/ZipIsReadyResponse")]
        bool ZipIsReady(string sessionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStorageServiceChannel : Easis.Wfs.FlowSystemService.StorageService.IStorageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StorageServiceClient : System.ServiceModel.ClientBase<Easis.Wfs.FlowSystemService.StorageService.IStorageService>, Easis.Wfs.FlowSystemService.StorageService.IStorageService {
        
        public StorageServiceClient() {
        }
        
        public StorageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StorageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StorageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StorageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string RegisterData(Easis.Wfs.FlowSystemService.StorageService.DataEntry dataEntry) {
            return base.Channel.RegisterData(dataEntry);
        }
        
        public string[] RegisterDataBatch(Easis.Wfs.FlowSystemService.StorageService.DataEntry[] dataEntries) {
            return base.Channel.RegisterDataBatch(dataEntries);
        }
        
        public Easis.Wfs.FlowSystemService.StorageService.DataEntry GetDataById(string id) {
            return base.Channel.GetDataById(id);
        }
        
        public void RemoveDataById(string id) {
            base.Channel.RemoveDataById(id);
        }
        
        public Easis.Wfs.FlowSystemService.StorageService.DataEntry[] GetDataByIdBatch(string[] idList) {
            return base.Channel.GetDataByIdBatch(idList);
        }
        
        public System.IO.Stream ZipSessionGet(string sessionId) {
            return base.Channel.ZipSessionGet(sessionId);
        }
        
        public System.IO.Stream ZipGet(string[] dataIds) {
            return base.Channel.ZipGet(dataIds);
        }
        
        public string ZipSessionStart(string[] dataIds) {
            return base.Channel.ZipSessionStart(dataIds);
        }
        
        public bool ZipIsReady(string sessionId) {
            return base.Channel.ZipIsReady(sessionId);
        }
    }
}
